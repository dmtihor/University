//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace University.Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LecturerWcf", Namespace="http://schemas.datacontract.org/2004/07/University.Wcf.Entity")]
    [System.SerializableAttribute()]
    public partial class LecturerWcf : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LecturerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LecturerAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LecturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LecturerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private University.Db.Entity.Seminar[] SeminarsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LecturerAddress {
            get {
                return this.LecturerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.LecturerAddressField, value) != true)) {
                    this.LecturerAddressField = value;
                    this.RaisePropertyChanged("LecturerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LecturerAge {
            get {
                return this.LecturerAgeField;
            }
            set {
                if ((this.LecturerAgeField.Equals(value) != true)) {
                    this.LecturerAgeField = value;
                    this.RaisePropertyChanged("LecturerAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LecturerId {
            get {
                return this.LecturerIdField;
            }
            set {
                if ((this.LecturerIdField.Equals(value) != true)) {
                    this.LecturerIdField = value;
                    this.RaisePropertyChanged("LecturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LecturerName {
            get {
                return this.LecturerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LecturerNameField, value) != true)) {
                    this.LecturerNameField = value;
                    this.RaisePropertyChanged("LecturerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public University.Db.Entity.Seminar[] Seminars {
            get {
                return this.SeminarsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeminarsField, value) != true)) {
                    this.SeminarsField = value;
                    this.RaisePropertyChanged("Seminars");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeminarWcf", Namespace="http://schemas.datacontract.org/2004/07/University.Wcf.Entity")]
    [System.SerializableAttribute()]
    public partial class SeminarWcf : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private University.Db.Entity.Lecturer[] LecturersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeminarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeminarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SeminarTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public University.Db.Entity.Lecturer[] Lecturers {
            get {
                return this.LecturersField;
            }
            set {
                if ((object.ReferenceEquals(this.LecturersField, value) != true)) {
                    this.LecturersField = value;
                    this.RaisePropertyChanged("Lecturers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeminarId {
            get {
                return this.SeminarIdField;
            }
            set {
                if ((this.SeminarIdField.Equals(value) != true)) {
                    this.SeminarIdField = value;
                    this.RaisePropertyChanged("SeminarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeminarName {
            get {
                return this.SeminarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SeminarNameField, value) != true)) {
                    this.SeminarNameField = value;
                    this.RaisePropertyChanged("SeminarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SeminarTime {
            get {
                return this.SeminarTimeField;
            }
            set {
                if ((this.SeminarTimeField.Equals(value) != true)) {
                    this.SeminarTimeField = value;
                    this.RaisePropertyChanged("SeminarTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILecturerService")]
    public interface ILecturerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/GetAllLecturers", ReplyAction="http://tempuri.org/ILecturerService/GetAllLecturersResponse")]
        University.Client.ServiceReference1.LecturerWcf[] GetAllLecturers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/GetAllLecturers", ReplyAction="http://tempuri.org/ILecturerService/GetAllLecturersResponse")]
        System.Threading.Tasks.Task<University.Client.ServiceReference1.LecturerWcf[]> GetAllLecturersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/AddLecturer", ReplyAction="http://tempuri.org/ILecturerService/AddLecturerResponse")]
        void AddLecturer(University.Client.ServiceReference1.LecturerWcf lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/AddLecturer", ReplyAction="http://tempuri.org/ILecturerService/AddLecturerResponse")]
        System.Threading.Tasks.Task AddLecturerAsync(University.Client.ServiceReference1.LecturerWcf lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/GetLecturerById", ReplyAction="http://tempuri.org/ILecturerService/GetLecturerByIdResponse")]
        University.Client.ServiceReference1.LecturerWcf GetLecturerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/GetLecturerById", ReplyAction="http://tempuri.org/ILecturerService/GetLecturerByIdResponse")]
        System.Threading.Tasks.Task<University.Client.ServiceReference1.LecturerWcf> GetLecturerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/RemoveLecturer", ReplyAction="http://tempuri.org/ILecturerService/RemoveLecturerResponse")]
        void RemoveLecturer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/RemoveLecturer", ReplyAction="http://tempuri.org/ILecturerService/RemoveLecturerResponse")]
        System.Threading.Tasks.Task RemoveLecturerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/UpdateLecturer", ReplyAction="http://tempuri.org/ILecturerService/UpdateLecturerResponse")]
        void UpdateLecturer(University.Client.ServiceReference1.LecturerWcf lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/UpdateLecturer", ReplyAction="http://tempuri.org/ILecturerService/UpdateLecturerResponse")]
        System.Threading.Tasks.Task UpdateLecturerAsync(University.Client.ServiceReference1.LecturerWcf lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/GetSeminars", ReplyAction="http://tempuri.org/ILecturerService/GetSeminarsResponse")]
        University.Client.ServiceReference1.SeminarWcf[] GetSeminars(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILecturerService/GetSeminars", ReplyAction="http://tempuri.org/ILecturerService/GetSeminarsResponse")]
        System.Threading.Tasks.Task<University.Client.ServiceReference1.SeminarWcf[]> GetSeminarsAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILecturerServiceChannel : University.Client.ServiceReference1.ILecturerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LecturerServiceClient : System.ServiceModel.ClientBase<University.Client.ServiceReference1.ILecturerService>, University.Client.ServiceReference1.ILecturerService {
        
        public LecturerServiceClient() {
        }
        
        public LecturerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LecturerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LecturerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LecturerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public University.Client.ServiceReference1.LecturerWcf[] GetAllLecturers() {
            return base.Channel.GetAllLecturers();
        }
        
        public System.Threading.Tasks.Task<University.Client.ServiceReference1.LecturerWcf[]> GetAllLecturersAsync() {
            return base.Channel.GetAllLecturersAsync();
        }
        
        public void AddLecturer(University.Client.ServiceReference1.LecturerWcf lecturer) {
            base.Channel.AddLecturer(lecturer);
        }
        
        public System.Threading.Tasks.Task AddLecturerAsync(University.Client.ServiceReference1.LecturerWcf lecturer) {
            return base.Channel.AddLecturerAsync(lecturer);
        }
        
        public University.Client.ServiceReference1.LecturerWcf GetLecturerById(int id) {
            return base.Channel.GetLecturerById(id);
        }
        
        public System.Threading.Tasks.Task<University.Client.ServiceReference1.LecturerWcf> GetLecturerByIdAsync(int id) {
            return base.Channel.GetLecturerByIdAsync(id);
        }
        
        public void RemoveLecturer(int id) {
            base.Channel.RemoveLecturer(id);
        }
        
        public System.Threading.Tasks.Task RemoveLecturerAsync(int id) {
            return base.Channel.RemoveLecturerAsync(id);
        }
        
        public void UpdateLecturer(University.Client.ServiceReference1.LecturerWcf lecturer) {
            base.Channel.UpdateLecturer(lecturer);
        }
        
        public System.Threading.Tasks.Task UpdateLecturerAsync(University.Client.ServiceReference1.LecturerWcf lecturer) {
            return base.Channel.UpdateLecturerAsync(lecturer);
        }
        
        public University.Client.ServiceReference1.SeminarWcf[] GetSeminars(int id) {
            return base.Channel.GetSeminars(id);
        }
        
        public System.Threading.Tasks.Task<University.Client.ServiceReference1.SeminarWcf[]> GetSeminarsAsync(int id) {
            return base.Channel.GetSeminarsAsync(id);
        }
    }
}
